generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum role {
  ADMIN
  MEDECIN
}

model specialites {
  id   Int    @id @default(autoincrement()) // Auto-incremented primary key
  nom  String @unique @db.VarChar(100) // Unique constraint on 'nom'

  // Relation avec utilisateurs
  utilisateurs utilisateurs[]
}


model utilisateurs {
  id       Int    @id @default(autoincrement()) // Auto-incremented primary key
  nom      String @db.VarChar(100)
  email    String @unique @db.VarChar(50)
  password String @db.VarChar(100)
  role     String @db.VarChar(100)

  // Relation avec specialites
  specialite   specialites? @relation(fields: [specialiteId], references: [id])
  specialiteId Int?

  // Relation avec patients
  patients patients[]

  // Relation avec rendezVous
  rendezVous rendezVous[]
}

model patients {
 id           Int      @id @default(autoincrement())
  nom          String
  prenom       String
  telephone    String   @unique // Contraint le champ `telephone` à être unique
  email        String   @unique // Contraint le champ `email` à être unique
  dateNaissance DateTime
  adresse      String?
  utilisateur  utilisateurs @relation(fields: [utilisateurId], references: [id])
  utilisateurId Int
  // Relation avec rendezVous
  rendezVous rendezVous[]
}

model rendezVous {
  id     Int      @id @default(autoincrement()) // Auto-incremented primary key
  date   DateTime @db.Date
  // heure  DateTime @db.Time
  status String   @db.VarChar(50)

  // Relation avec utilisateurs (le praticien)
  utilisateur   utilisateurs @relation(fields: [utilisateurId], references: [id])
  utilisateurId Int

  // Relation avec patients
  patient   patients @relation(fields: [patientId], references: [id])
  patientId Int
}
